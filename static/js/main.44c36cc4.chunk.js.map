{"version":3,"sources":["firebase_config.js","Todo.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","TodoListItem","todo","inprogress","id","style","display","ListItem","ListItemText","primary","secondary","Button","onClick","collection","doc","update","delete","App","useState","todos","setTodos","todoInput","setTodoInput","useEffect","onSnapshot","querySnapshot","docs","map","data","className","flexDirection","justifyContent","alignItems","width","marginBottom","marginTop","moment","Date","format","TextField","label","value","maxWidth","onChange","e","target","type","variant","preventDefault","console","log","length","add","timestamp","FieldValue","serverTimestamp","minWidth","padding","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAaEA,IAASC,cAVY,CACnBC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,8CAKX,IAAMC,EAAKT,IAASU,Y,0BCXL,SAASC,EAAT,GAAiD,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,WAAYC,EAAM,EAANA,GAWvD,OACE,gCACE,sBAAKC,MAAO,CAAEC,QAAS,QAAvB,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAcC,QAASP,EAAMQ,UAAWP,EAAa,cAAgB,gBAGvE,cAACQ,EAAA,EAAD,CAAQC,QAjBd,WACEb,EAAGc,WAAW,SAASC,IAAIV,GAAIW,OAAO,CACpCZ,YAAaA,KAeX,SAAoCA,EAAa,OAAS,WAC1D,cAACQ,EAAA,EAAD,CAAQC,QAZd,WACEb,EAAGc,WAAW,SAASC,IAAIV,GAAIY,UAW3B,kBAEF,0BCgDSC,MA7Df,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEqBF,mBAAS,IAF9B,mBAENG,EAFM,KAEKC,EAFL,KAqCb,OAjCAC,qBAAU,WAKRxB,EAAGc,WAAW,SAASW,YAAW,SAAUC,GAC1CL,EACEK,EAAcC,KAAKC,KAAI,SAACb,GAAD,MAAU,CAC/BV,GAAIU,EAAIV,GACRF,KAAMY,EAAIc,OAAO1B,KACjBC,WAAYW,EAAIc,OAAOzB,qBAR5B,IAgCD,qBAAK0B,UAAU,MAAf,SACE,sBAAKxB,MAAO,CAAEC,QAAS,OAAQwB,cAAe,SAAUC,eAAgB,SAAUC,WAAY,SAAUC,MAAO,QAA/G,UACE,oBAAI5B,MAAO,CAAC6B,aAAa,MAAOC,UAAU,QAA1C,iDACA,oBAAI9B,MAAO,CAAC8B,UAAU,OAAtB,SAA+BC,IAAOC,QAAQC,OAAO,kBACrD,iCACE,cAACC,EAAA,EAAD,CAAWnC,GAAG,iBAAiBoC,MAAM,eACnCC,MAAOpB,EAAWhB,MAAO,CAAE4B,MAAO,OAAQS,SAAU,SACpDC,SAAU,SAACC,GAAD,OAAOtB,EAAasB,EAAEC,OAAOJ,UAEzC,cAAC9B,EAAA,EAAD,CAAQmC,KAAK,SAASC,QAAQ,YAAYnC,QA3BlD,SAAiBgC,GACfA,EAAEI,iBAEFC,QAAQC,IAAI,QAASN,EAAEC,OAAOJ,OAC1BpB,EAAU8B,OAAS,GAGrBpD,EAAGc,WAAW,SAASuC,IAAI,CACzBjD,YAAY,EACZkD,UAAW/D,IAASU,UAAUsD,WAAWC,kBACzCrD,KAAMmB,IAIVC,EAAa,KAcLjB,MAAO,CAAEmD,SAAU,OAAQC,QAAS,MAAOtB,UAAW,QADxD,oBAIF,sBAAK9B,MAAO,CAAE4B,MAAO,OAAQS,SAAU,QAASP,UAAW,OAA3D,UACGhB,EAAMQ,KAAI,SAACzB,GAAD,OACT,cAACD,EAAD,CAAcC,KAAMA,EAAKA,KAAMC,WAAYD,EAAKC,WAAYC,GAAIF,EAAKE,QAEvE,oBAAIC,MAAO,CAAEC,QAAS,OAAQwB,cAAe,SAAUC,eAAgB,SAAUC,WAAY,SAAUC,MAAO,QAA9G,8CAJF,mBC1DRyB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.44c36cc4.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\n  // Your web app's Firebase configuration\n  var firebaseConfig = {\n    apiKey: \"AIzaSyBLOQM9o6UW5_HizqdR0hgd1qu9XQUHHjk\",\n    authDomain: \"todoapp-84746.firebaseapp.com\",\n    databaseURL: \"https://todoapp-84746.firebaseio.com\",\n    projectId: \"todoapp-84746\",\n    storageBucket: \"todoapp-84746.appspot.com\",\n    messagingSenderId: \"962356074858\",\n    appId: \"1:962356074858:web:0e32aa781699f8f5a4ed13\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\n\nexport { db };\n","import React from \"react\";\r\nimport { ListItem, ListItemText, Button } from \"@material-ui/core\";\r\nimport { db } from \"./firebase_config\";\r\n\r\nexport default function TodoListItem({ todo, inprogress, id }) {\r\n  function toggleInProgress() {\r\n    db.collection(\"todos\").doc(id).update({\r\n      inprogress: !inprogress,\r\n    });\r\n  }\r\n\r\n  function deleteTodo() {\r\n    db.collection(\"todos\").doc(id).delete();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: \"flex\" }}>\r\n        <ListItem>\r\n          <ListItemText primary={todo} secondary={inprogress ? \"In Progress\" : \"Completed\"} />\r\n        </ListItem>\r\n\r\n        <Button onClick={toggleInProgress}>{inprogress ? \"Done\" : \"UnDone\"}</Button>\r\n        <Button onClick={deleteTodo}>X</Button>\r\n      </div>\r\n      <hr></hr>\r\n    </div>\r\n  );\r\n}\r\n","import moment from 'moment'\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport { db } from \"./firebase_config\";\r\nimport firebase from \"firebase\";\r\n\r\nimport \"./App.css\";\r\nimport TodoListItem from \"./Todo\";\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [todoInput, setTodoInput] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getTodos();\r\n  }, []); // blank to run only on first launch\r\n\r\n  function getTodos() {\r\n    db.collection(\"todos\").onSnapshot(function (querySnapshot) {\r\n      setTodos(\r\n        querySnapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          todo: doc.data().todo,\r\n          inprogress: doc.data().inprogress,\r\n        }))\r\n      );\r\n    });\r\n  }\r\n\r\n  function addTodo(e) {\r\n    e.preventDefault();\r\n\r\n    console.log(\".... \", e.target.value);\r\n    if (todoInput.length > 0) {\r\n\r\n\r\n      db.collection(\"todos\").add({\r\n        inprogress: true,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        todo: todoInput,\r\n      });\r\n    }\r\n\r\n    setTodoInput(\"\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"100%\" }}>\r\n        <h1 style={{marginBottom:\"0px\", marginTop:\"10px\"}}>ðŸ˜ƒ TODO LIST ðŸ˜ƒ</h1>\r\n        <h4 style={{marginTop:\"0px\"}}>{moment(Date()).format('MMMM Do YYYY')}</h4>\r\n        <form>\r\n          <TextField id=\"standard-basic\" label=\"Write a Todo\"\r\n            value={todoInput} style={{ width: \"90vw\", maxWidth: \"450px\" }}\r\n            onChange={(e) => setTodoInput(e.target.value)} />\r\n\r\n          <Button type=\"submit\" variant=\"contained\" onClick={addTodo}\r\n            style={{ minWidth: \"25px\", padding: \"0px\", marginTop: \"19px\" }}> + </Button>\r\n        </form>\r\n\r\n        <div style={{ width: \"90vw\", maxWidth: \"500px\", marginTop: \"1px\" }}>\r\n          {todos.map((todo) => (\r\n            <TodoListItem todo={todo.todo} inprogress={todo.inprogress} id={todo.id} />\r\n          ))}\r\n          <h6 style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"100%\" }}>by Ramiro Alfaro using Firebase </h6>       </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}